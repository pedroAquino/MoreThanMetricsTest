{"version":3,"sources":["shared/assets/beach.jpeg","shared/assets/capivara.jpg","shared/assets/dog.jpg","shared/assets/tess.jpg","Header/components/HeaderTitle.js","Header/components/HeaderMenu.js","shared/state/entityStateFactory.js","Persona/services/personaFactory.js","Persona/services/personaDucks.js","Persona/containers/PersonaContainer.js","Header/Header.js","SideBar/components/SideBarHeader.js","shared/components/Disclaymer.js","SideBar/components/PersonaElement.js","shared/components/MessageInfo.js","shared/services/draggingDucks.js","Persona/services/fieldFactory.js","shared/services/positionFactory.js","shared/containers/DraggingContainer.js","SideBar/SideBar.js","shared/components/Viewport.js","shared/components/EditionBar.js","Persona/containers/FieldContainer.js","Persona/components/PersonaField.js","Persona/components/PersonaHeader.js","Persona/components/FieldPlaceHolder.js","Persona/services/columnFactory.js","shared/utils/stateHelper.js","Persona/services/columnDucks.js","Persona/containers/ColumnsContainer.js","shared/utils/DOMHelper.js","Persona/Persona.js","App/App.js","shared/config/fontAwesome.js","serviceWorker.js","shared/state/reducers.js","Persona/services/apiFactory.js","Persona/services/personaSagas.js","Persona/services/columnSagas.js","shared/state/sagas.js","index.js","shared/state/store.js","shared/assets sync /^/.*$"],"names":["module","exports","__webpack_require__","p","injectSheet","theme","titleContainer","color","& h1","marginLeft","float","fontSize","& span","fontWeight","& svg","editIcon","userIcon","opacity","props","classes","title","react","className","index_es","icon","HeaderMenuItem","text","headerMenu","display","justifyContent","& li","textAlign","colors","darkGray","& li div","& li p","map","item","Object","assign","key","entityStateFactory","_ref","arguments","length","undefined","_ref$entityStatus","entityStatus","_ref$errors","errors","withEntityState","entity","objectSpread","personaFactory","_ref$id","id","_ref$name","name","_ref$initials","initials","_ref$color","_ref$avatar","avatar","substring","toUpperCase","GET_PERSONA","GET_PERSONA_COMPLETE","GET_PERSONA_ERROR","getPersonaComplete","persona","type","payload","getPersonaError","error","UPDATE_PERSONA","UPDATE_PERSONA_ERROR","UPDATE_PERSONA_COMPLETE","updatePersonaError","updatePersonaComplete","initialState","compose","PersonaContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onUpdatePersona","bind","assertThisInitialized","dispatchGet","prevProps","parsed","validatePersona","dispatchUpdateError","dispatchUpdate","children","React","Component","connect","state","entities","dispatch","getPersona","updatePersona","mainHeader","height","headerHeight","width","background","lightGradient","headerContent","padding","containers_PersonaContainer","components_HeaderTitle","components_HeaderMenu","sideBarHeader","borderRadius","backgroundColor","midleGray","headerText","fontSizes","small","letterSpacing","marginTop","headerIcon","disclaymer","lightGreen","lineHeight","fontStyle","ShortText","shortText","LongText","_ref2","longText","Image","_ref3","image","ImageGallery","_ref4","Number","_ref5","personaElement","white","flexDirection","alignItems","position","bottom","cursor","kind","content","short-text","PersonaElement_ShortText","long-text","PersonaElement_LongText","PersonaElement_Image","image-gallery","PersonaElement_ImageGallery","number","PersonaElement_Number","split","join","messageInfo","container","sideBar","START_DRAGGING","STOP_DRAGGING","END_DRAGGING","field","dragStatus","fieldFactory","_ref$title","_ref$fieldType","fieldType","_ref$data","data","_ref$columnId","src","imageSources","formatedText","columnId","_ref$editable","editable","_ref$prevId","isNew","prevId","_ref$nextId","nextId","_ref$prev_id","prev_id","_ref$column_id","column_id","_ref$next_id","next_id","_ref$field_type","field_type","value","find","fType","replace","positionFactory","_ref$x","x","_ref$y","y","DraggingContainer","onStart","onStop","dispatchStart","clientX","clientY","dispatchStop","dispatchEnd","dragging","ui","startDragging","stopDragging","bordeRadius","lightGray","paddingBottom","padded","elements","components_SideBarHeader","components_Disclaymer","style","containers_DraggingContainer","draggingState","react_draggable_default","a","handle","components_PersonaElement","components_MessageInfo","@global","body","fontFamily","#header","top","left","zIndex","viewport","right","Header_Header","SideBar_SideBar","SelectField","select","disabled","editionBar","& > ul","& > ul > li","border","concat","EditionBar_SelectField","FieldContainer","_React$Component","initialValue","onChange","onFieldBlur","inherits","createClass","setState","evt","target","fieldValue","defineProperty","onBlur","ImgField","alt","containers_FieldContainer","textField","components_EditionBar","paragraph","index","ImgGallery","imgGallery","addImage","imageIcon","plusIcon","PersonaField_ImgField","PersonaField","label","hasErrors","onTrashIconClick","fieldContent","PersonaField_ShortText","PersonaField_LongText","PersonaField_ImgGallery","fieldHeight","disabledStyles","fieldError","fieldHeader","onClick","cursorPointer","defaultProps","marginBlockEnd","marginBlockStart","medium","&:focus","outline","& p","personaHeader","margin","nameField","shortNameField","_props$persona","components_PersonaField","root","react_default","createElement","columnFactory","_ref$width","_ref$fields","fields","createColumnsWithFields","columns","mappedFields","c","filter","addFieldToColumn","curry","columnState","items","column","reduce","acc","sort","prev","next","parsedField","columnWithField","toConsumableArray","nextColumns","removeFieldFromColumn","columnWithOutField","f","setToLoadingState","setToErrorState","GET_COLUMNS","GET_COLUMNS_ERROR","GET_COLUMNS_COMPLETE","ADD_FIELD","ADD_FIELD_COMPLETE","UPDATE_FIELD","UPDATE_FIELD_COMPLETE","REMOVE_FIELD","REMOVE_FIELD_COMPLETE","getColumnsError","getColumnsComplete","addFieldComplete","updateFieldComplete","removeFieldComplete","ColumnsContainer","onUpdateFeld","onRemoveField","containerPosition","el","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","offset","personaRef","current","dispatchAddField","info","fieldId","dispatchRemoveField","updateField","removeField","addField","ref","minHeight","personaContent","firstColumn","flexBasis","flexGrow","& > ul > li:nth-child(1)","secondColumn","paddingLeft","components_PersonaHeader","containers_ColumnsContainer","columnsState","colClass","components_FieldPlaceHolder","require","large","App","lib","components_Viewport","Persona_Persona","configureFontAwesome","library","add","faSave","faCog","faTimes","faImage","faImages","faInfoCircle","faUser","faEdit","faPlusSquare","faShare","faCopy","faArrowRight","faQuestionCircle","faEllipsisH","faBold","faItalic","faHeading","faList","faPaintBrush","faLink","faPlusCircle","faTrash","Boolean","location","hostname","match","combineReducers","action","pipe","mockedHttpCall","url","method","_server","responses","/personas/20","status","/personas/20/columns","/personas/20/columns/fields","getResponse","getDynamicResponse","expectedResponse","server","response","console","log","JSON","stringify","Promise","resolve","setTimeout","apiFactory","getColumns","personaId","getFields","createField","deleteField","fetchPersona","regenerator_default","wrap","_context","sent","put","t0","stop","_marked","_context2","_marked2","personaSagas","takeLatest","columnsResponse","fieldsResponse","columnSagas_marked","columnSagas_marked2","_context3","_marked3","_context4","_marked4","columnSagas","all","sagas_marked","store","sagaMiddleware","createSagaMiddleware","middleWareEnhancer","applyMiddleware","enhancers","composeWithDevTools","createStore","reducers","run","sagas","configureStore","ReactDOM","render","es","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","./beach.jpeg","./capivara.jpg","./dog.jpg","./reset.css","./tess.jpg","webpackContext","req","webpackContextResolve","o","e","Error","code","keys"],"mappings":"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","file":"static/js/main.88fa7780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beach.be86e94d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/capivara.8af3182f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog.3bbab165.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tess.0ac01ffa.jpg\";","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n    classes: any;\r\n    title: string;\r\n};\r\n\r\nconst styles = theme => ({\r\n    titleContainer: {\r\n      color: '#3C4646',\r\n      '& h1': {\r\n        marginLeft: 17,\r\n        float: 'left',\r\n\t      color: '#3C4646',\t\r\n        fontSize: 20,\t\r\n        '& span': {\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      '& svg': {\r\n        float: 'left',\r\n      }\r\n    },\r\n    editIcon: {\r\n      color: '#B1B6B6',\t\r\n      fontSize: 14,\r\n      '& svg': {\r\n        marginLeft: 8,\r\n      }\r\n    },\r\n    userIcon: {\r\n      opacity: 0.5,\r\n      fontSize: 20\r\n    }\r\n});\r\n\r\nfunction HeaderTitle(props: Props) {\r\n  const { classes, title } = props;\r\n  return (\r\n    <div className={classes.titleContainer}>\r\n        <div className={classes.userIcon}>\r\n          <FontAwesomeIcon icon=\"user\" />\r\n        </div>\r\n        <h1>Persona <span>{title}</span></h1>\r\n        <div className={classes.editIcon}>\r\n          <FontAwesomeIcon icon=\"edit\" />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectSheet(styles)(HeaderTitle);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\ntype MenuItem = {\r\n    icon: string;\r\n    text: string\r\n}\r\n\r\nconst styles = theme => ({\r\n    headerMenu: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        '& li': {\r\n            textAlign: 'center',\r\n            color: theme.colors.darkGray,\r\n        },\r\n        '& li div': {\r\n            fontSize: 20,\r\n        },\r\n        '& li p': {\r\n            fontSize: 12\r\n        }\r\n    }\r\n});\r\n\r\nfunction HeaderMenuItem(props: MenuItem) {\r\n    const {\r\n        icon,\r\n        text\r\n    } = props;\r\n    return (\r\n        <li>\r\n            <div>\r\n                <FontAwesomeIcon icon={icon} />\r\n            </div>\r\n            <p>{text}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction HeaderMenu(props: Props) {\r\n  const { classes } = props;\r\n  const menuItens = [\r\n      {\r\n          icon: 'save',\r\n          text: 'Save persona'\r\n      },\r\n      {\r\n          icon: 'plus-square',\r\n          text: 'Add element'\r\n      },\r\n      {\r\n          icon: 'share',\r\n          text: 'Export'\r\n      },\r\n      {\r\n          icon: 'copy',\r\n          text: 'Duplicate'\r\n      },\r\n      {\r\n          icon: 'arrow-right',\r\n          text: 'Move'\r\n      },\r\n      {\r\n          icon: 'question-circle',\r\n          text: 'Help'\r\n      },\r\n      {\r\n          icon: 'ellipsis-h',\r\n          text: 'More actions'\r\n      },\r\n  ];\r\n  return (\r\n      <ul className={classes.headerMenu}>\r\n        {menuItens.map(item => <HeaderMenuItem key={item.text} {...item} />)}\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default injectSheet(styles)(HeaderMenu);\r\n\r\n","// @flow\r\n\r\nexport type EntityState = {\r\n    entityStatus: 'LOADING' | 'ERROR' | 'STABLE' | 'PERSISTING' | 'PERSISTING_ERRORS';\r\n    errors: any;\r\n};\r\n\r\nconst entityStateFactory = ({\r\n    entityStatus = 'LOADING',\r\n    errors = {}\r\n}: EntityState = {}) => ({\r\n    entityStatus,\r\n    errors: entityStatus === 'ERROR' ? errors : {},\r\n});\r\n\r\nexport const withEntityState = (entity: any) => Object.assign({}, entity, {\r\n    ...entityStateFactory()\r\n});\r\n\r\nexport default entityStateFactory;","// @flow\r\n\r\nexport type PersonaModel = {\r\n    id: number;\r\n    name: string;\r\n    initials: string;\r\n    color: string;\r\n    avatar: string;\r\n};\r\n\r\nconst personaFactory = ({\r\n    id  = 0,\r\n    name = '',\r\n    initials = '',\r\n    color = '#fff',\r\n    avatar = 'default.png'\r\n}: PersonaModel = {}): PersonaModel => ({\r\n    id,\r\n    name,\r\n    initials: name ? name.substring(0, 3).toUpperCase() : initials,\r\n    color,\r\n    avatar\r\n});\r\n\r\nexport const validatePersona = (persona: PersonaModel) => {\r\n    const parsed = personaFactory(persona);\r\n    const errors = {};\r\n\r\n    if (!parsed['name']) {\r\n        errors['name'] = 'Name is required';\r\n    }\r\n\r\n    if (!parsed['initials']) {\r\n        errors['initial'] = 'Initials is required';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default personaFactory;","// @flow\r\nimport type { EntityState } from '../../shared/state/entityStateFactory';\r\nimport type { PersonaModel } from './personaFactory';\r\nimport { withEntityState } from '../../shared/state/entityStateFactory';\r\nimport personaFactory from './personaFactory';\r\nimport { compose } from 'ramda';\r\n\r\nexport type PersonaState = PersonaModel & EntityState;\r\n\r\n// ---- FETCH PERSONA ------\r\nexport const GET_PERSONA = 'GET_PERSONA';\r\nexport const GET_PERSONA_COMPLETE = 'GET_PERSONA_COMPLETE';\r\nexport const GET_PERSONA_ERROR = 'GET_PERSONA_ERROR';\r\n\r\nexport const getPersona = (id: number) => ({\r\n    type: GET_PERSONA,\r\n    payload: id\r\n});\r\n\r\nexport const getPersonaComplete = (persona: PersonaModel) => ({\r\n    type: GET_PERSONA_COMPLETE,\r\n    payload: {...persona}\r\n});\r\n\r\nexport const getPersonaError = (error: any) => ({\r\n    type: GET_PERSONA_ERROR,\r\n    payload: {...error}\r\n});\r\n\r\n// ---- UPDATE PERSONA ------\r\nexport const UPDATE_PERSONA = 'UPDATE_PERSONA';\r\nexport const UPDATE_PERSONA_ERROR = 'UPDATE_PERSONA_ERROR';\r\nexport const UPDATE_PERSONA_COMPLETE = 'UPDATE_PERSONA_COMPLETE';\r\n\r\nexport const  updatePersona = (persona: PersonaModel) => ({\r\n    type: UPDATE_PERSONA,\r\n    payload: {...persona}\r\n});\r\n\r\nexport const updatePersonaError = (error: any) =>  ({\r\n    type: UPDATE_PERSONA_ERROR,\r\n    payload: {...error}\r\n});\r\n\r\nexport const updatePersonaComplete = (persona:PersonaModel) => ({\r\n    type: UPDATE_PERSONA_COMPLETE,\r\n    payload: {...persona}\r\n});\r\n\r\nexport const initialState: PersonaState = compose(\r\n    withEntityState,\r\n    personaFactory,\r\n)({});\r\n\r\nexport default function personaReducer(state: PersonaState = initialState , action: any) {\r\n    switch (action.type) {\r\n        case GET_PERSONA:\r\n            return Object.assign({}, state, { entityStatus: 'LOADING' });\r\n        case GET_PERSONA_ERROR:\r\n            return Object.assign({}, state, { entityStatus: 'ERROR', errors: action.payload });\r\n        case GET_PERSONA_COMPLETE: {\r\n            const persona = compose(\r\n                withEntityState,\r\n                personaFactory\r\n            )(action.payload);\r\n            return Object.assign({}, persona, { entityStatus: 'STABLE' });\r\n        }\r\n        case UPDATE_PERSONA:\r\n            return Object.assign({}, state, { entityStatus: 'PERSISTING' })\r\n        case UPDATE_PERSONA_ERROR:\r\n            return Object.assign({}, state, { entityStatus: 'PERSISTING_ERRORS', errors: action.payload });\r\n        case UPDATE_PERSONA_COMPLETE: {\r\n            const persona = compose(\r\n                withEntityState,\r\n                personaFactory\r\n            )(action.payload);\r\n            return Object.assign({}, persona, { entityStatus: 'STABLE' });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\n// @flow\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport type { PersonaState } from '../services/personaDucks';\r\nimport { updatePersona, updatePersonaError, getPersona } from '../services/personaDucks';\r\nimport { validatePersona } from '../services/personaFactory';\r\n\r\nexport const DEFAULT_PERSONA_ID = 20;\r\n\r\ntype Props = {\r\n    dispatchGet: (id: number) => void;\r\n    dispatchUpdate: (persona: PersonaState) => void;\r\n    dispatchUpdateError: (error: any) => void;\r\n    children: any;\r\n    persona: PersonaState;\r\n}\r\n\r\nclass PersonaContainer extends React.Component<Props, any>{\r\n    constructor(props) {\r\n        super(props);\r\n        this.onUpdatePersona = this.onUpdatePersona.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.dispatchGet(DEFAULT_PERSONA_ID);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props) {\r\n        if (prevProps.persona.name !== this.props.persona.name ||\r\n            prevProps.persona.initials !== this.props.persona.initials) {\r\n            const errors = validatePersona(this.props.persona);\r\n            if (errors) {\r\n                this.props.dispatchUpdateError(errors);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*:: onUpdatePersona: () => void */\r\n    onUpdatePersona(persona: any) {\r\n        const parsed = Object.assign({}, this.props.persona, persona);\r\n        this.props.dispatchUpdate(parsed);\r\n    }\r\n\r\n    render() {\r\n        return this.props.children(\r\n            this.props.persona, \r\n            this.onUpdatePersona\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    persona: state.entities.persona\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGet: (id: number) => dispatch(getPersona(id)),\r\n    dispatchUpdate: (persona: PersonaState) => dispatch(updatePersona(persona)),\r\n    dispatchUpdateError: (error: any) => dispatch(updatePersonaError(error))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonaContainer);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport HeaderTitle from './components/HeaderTitle';\r\nimport HeaderMenu from './components/HeaderMenu';\r\nimport PersonaContainer from '../Persona/containers/PersonaContainer';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    mainHeader: {\r\n        height: theme.headerHeight,\r\n        width: '100%',\t\r\n        background: theme.colors.lightGradient\r\n    },\r\n    headerContent: {\r\n      padding: '20px 16px 20px 25px'\r\n    },\r\n    headerMenu: {\r\n      float: 'right',\r\n      width: '42%'\r\n    }\r\n});\r\n\r\nfunction Header(props: Props) {\r\n  const { classes } = props;\r\n  return (\r\n    <header id=\"header\" className={classes.mainHeader}>\r\n      <div className={classes.headerContent}>\r\n        <PersonaContainer>\r\n          { persona =>  <HeaderTitle title={persona.name} />}\r\n        </PersonaContainer>\r\n        <div className={classes.headerMenu}>\r\n          <HeaderMenu />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(Header);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    sideBarHeader: {\r\n\t    height: 36,\r\n        borderRadius: '2px 0 0 0',\r\n        backgroundColor: theme.colors.midleGray,\r\n        padding: '11px 11px 12px 24px',\r\n        color: theme.colors.darkGray,\r\n    },\r\n    headerText: {\r\n        fontSize: theme.fontSizes.small,\r\n        fontWeight: 600,\r\n        letterSpacing: 0.8,\r\n        float: 'left',\r\n        marginTop: 9\r\n    },\r\n    headerIcon: {\r\n        float: 'right',\r\n        marginTop: 9\r\n    }\r\n});\r\n\r\nfunction SideBarHeader(props: Props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.sideBarHeader}>\r\n        <p className={classes.headerText}>\r\n            ADD ELEMENT\r\n        </p>\r\n        <div className={classes.headerIcon}>\r\n            <FontAwesomeIcon icon=\"times\" />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(SideBarHeader);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\n\r\ntype Props = {\r\n  children: string;\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    disclaymer: {\r\n\t    backgroundColor: theme.colors.lightGreen,\t\r\n        lineHeight: '18px',\r\n        color: theme.colors.darkGray,\r\n        fontSize: 14,\r\n        padding: '12px 24px 15px 24px',\r\n        fontStyle: 'italic'\r\n    }\r\n});\r\n\r\nfunction Disclaymer(props: Props) {\r\n  const { children, classes } = props;\r\n  return (\r\n    <div className={classes.disclaymer}>\r\n        {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(Disclaymer);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  kind: 'short-text' | 'long-text' | 'image' | 'image-gallery' | 'number';\r\n  classes: any;\r\n};\r\n\r\nconst styles  = theme => ({\r\n    personaElement: {\r\n        background: theme.colors.white,\r\n        width: 163,\r\n        height: 112,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        borderRadius: '2px 2px 0 0',\r\n        position: 'relative'\r\n    },\r\n    text: {\r\n        fontSize: theme.fontSizes.small,\r\n        color: theme.colors.darkGray,\r\n        fontWeight: 'bold',\r\n        position: 'absolute',\r\n        bottom: 12\r\n    },\r\n    shortText: {\r\n        fontSize: 40,\r\n        fontWeight: 300,\r\n        color: '#B1B6B6',\r\n        padding: '13px 45px 0px 46px',\r\n        cursor: 'move'\r\n    },\r\n    longText: {\r\n        fontSize: 11,\r\n        padding: '11.8px 13.56px 0px 16.31px',\r\n        textAlign: 'center',\r\n        color: '#B1B6B6'\r\n    },\r\n    image: {\r\n        fontSize: 32,\r\n        padding: '31px 61px 0px 62px',\r\n        color: '#B1B6B6'\r\n    }\r\n});\r\n\r\nconst ShortText = ({ classes }) => <div className={classes.shortText}>Abc</div>;\r\nconst LongText = ({ classes }) => (\r\n    <div className={classes.longText}>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vehicula, purus sed efficitur dignissim, augue risus suscipit massa, eget accumsan\r\n    </div>\r\n);\r\nconst Image = ({ classes }) => <div className={classes.image}><FontAwesomeIcon icon=\"image\" /></div>;\r\nconst ImageGallery = ({ classes }) => <div className={classes.image}><FontAwesomeIcon icon=\"images\" /></div>;\r\nconst Number = ({ classes }) => <div className={classes.shortText}>123</div>;\r\n\r\nfunction PersonaElement(props: Props) {\r\n  const { kind, classes } = props;\r\n  const content = {\r\n    'short-text': <ShortText classes={classes} />,\r\n    'long-text': <LongText classes={classes} />,\r\n    'image':  <Image classes={classes} />,\r\n    'image-gallery': <ImageGallery classes={classes} />,\r\n    'number': <Number classes={classes} />\r\n  };\r\n\r\n  return (\r\n    <div className={classes.personaElement}>\r\n        {content[kind]}\r\n        <div className={classes.text}>\r\n            {kind.split('-').join(' ').toUpperCase()}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(PersonaElement);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  children: string;\r\n  title: string;\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    messageInfo: {\r\n\t      backgroundColor: theme.colors.lightGreen,\t\r\n        lineHeight: '18px',\r\n        color: theme.colors.darkGray,\r\n        fontSize: 14,\r\n        fontStyle: 'italic',\r\n        display: 'flex'\r\n    },\r\n    container: {\r\n        padding: '8px 14px 8px 16px',\r\n    },\r\n    sideBar: {\r\n\t    borderRadius: '2px 0 0 2px',\r\n      backgroundColor: 'rgba(58,183,247,0.25)',\r\n      width:40,\r\n      fontSize: 20,\r\n      lineHeight: '21px',\r\n      color: '#3AB7F7',\r\n      padding: '24px 11px 25px 11px'\r\n    },\r\n    title: {\r\n      fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nexport function MessageInfo(props: Props) {\r\n  const { classes, children, title } = props;\r\n\r\n  return (\r\n    <div className={classes.messageInfo}>\r\n        <div className={classes.sideBar}>\r\n           <FontAwesomeIcon icon=\"info-circle\" />\r\n        </div>\r\n        <div className={classes.container}>\r\n          <p className={classes.title}>{title}</p>\r\n          <p>{children}</p>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(MessageInfo);","// @flow\r\nimport type { Field } from '../../Persona/services/fieldFactory';\r\nimport type { Position } from './positionFactory';\r\n\r\nexport type DraggingState = {\r\n    field: ?Field;\r\n    position: ?Position;\r\n    dragStatus: 'DRAGGING' | 'PARKED'\r\n};\r\n\r\nexport const START_DRAGGING = 'START_DRAGGING';\r\nexport const STOP_DRAGGING = 'STOP_DRAGGING';\r\nexport const END_DRAGGING = 'END_DRAGGING';\r\n\r\nexport const startDragging = (field: Field) => ({\r\n    type: START_DRAGGING,\r\n    payload: field\r\n});\r\n\r\nexport const stopDragging = (field: Field, position: Position) => ({\r\n    type: STOP_DRAGGING,\r\n    payload: { field: field, position: position }\r\n});\r\n\r\nexport const endDragging = () => ({\r\n    type: END_DRAGGING\r\n});\r\n\r\nconst initialState: DraggingState = {\r\n    field: null,\r\n    position: null,\r\n    dragStatus: 'PARKED'\r\n};\r\n\r\nexport default function draggingReducer(state: DraggingState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case START_DRAGGING:\r\n            return Object.assign({}, state, { dragStatus: 'DRAGGING', field: action.payload });\r\n        case STOP_DRAGGING:\r\n            return Object.assign({}, state, { \r\n                dragStatus: 'PARKED', \r\n                field: action.payload.field,\r\n                position: action.payload.position\r\n            });\r\n        case END_DRAGGING:\r\n            return { ...initialState };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Field = {\r\n    id: number,\r\n    title: string,\r\n    fieldType: 'short-text' | 'long-text' | 'image' | 'image-gallery' | 'number',\r\n    data: string | number | Array<string>,\r\n    columnId: number,\r\n    prevId : number,\r\n    nextId: number,\r\n    src: string;\r\n    imageSources: Array<string>;\r\n    formatedText: Array<string>;\r\n    editable: boolean;\r\n    isNew: boolean;\r\n};\r\n\r\nconst fieldFactory = ({\r\n    id = 0,\r\n    title = '',\r\n    fieldType = '',\r\n    data = '',\r\n    src = '',\r\n    imageSources = '',\r\n    formatedText = [],\r\n    columnId =  0,\r\n    editable = false,\r\n    isNew = false,\r\n    prevId =  0,\r\n    nextId =  0,\r\n    prev_id = 0,\r\n    column_id = 0,\r\n    next_id = 0,\r\n    field_type = ''\r\n}: any = {}): Field => ({\r\n    id,\r\n    title,\r\n    data,\r\n    editable,\r\n    columnId: columnId || column_id,\r\n    prevId: prevId || prev_id,\r\n    nextId: nextId || next_id,\r\n    \r\n    get fieldType() {\r\n        const value = fieldType || field_type;\r\n        return ['short-text', 'long-text', 'image', 'image-gallery', 'number']\r\n            .find(fType => fType === value.replace('_', '-')) || 'short-text';\r\n    },\r\n\r\n    get src() {\r\n        return this.fieldType === 'image' ? this.data : '';\r\n    },\r\n\r\n    get imageSources() {\r\n        return this.fieldType === 'image-gallery' ? this.data : [];\r\n    },\r\n\r\n    get formatedText() {\r\n        return this.fieldType === 'long-text' ? this.data : [];\r\n    }\r\n});\r\n\r\nexport default fieldFactory;","// @flow\r\n\r\nexport type Position = {\r\n    x: number;\r\n    y: number;\r\n};\r\n\r\nconst positionFactory = ({\r\n    x = 0,\r\n    y = 0\r\n}: Position = {}) => ({\r\n    x,\r\n    y\r\n});\r\n\r\nexport default positionFactory;","// @flow\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport type { Field } from '../../Persona/services/fieldFactory';\r\nimport type { Position } from '../services/positionFactory';\r\nimport type { DraggingState } from '../services/draggingDucks';\r\nimport { startDragging, stopDragging, endDragging } from '../services/draggingDucks';\r\nimport fieldFactory from '../../Persona/services/fieldFactory';\r\nimport positionFactory from '../services/positionFactory';\r\n\r\ntype Props = {\r\n  dragging: DraggingState;\r\n  children: any;\r\n  dispatchStart: (field: Field) => void;\r\n  dispatchStop: (field: Field, position: Position) => void;\r\n  dispatchEnd: () => void;\r\n};\r\n\r\ntype State = {\r\n  \r\n};\r\n\r\nclass DraggingContainer extends React.Component<Props, State>{\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onStop = this.onStop.bind(this);\r\n    this.field = fieldFactory({\r\n      title: 'info',\r\n      fieldType: 'short-text',\r\n      columnId: 2,\r\n      isNew: true\r\n    });\r\n  }\r\n\r\n  field: Field;\r\n  \r\n  /*:: onStart: () => void */\r\n  onStart() {\r\n    this.props.dispatchStart(this.field);\r\n  }\r\n\r\n  /*:: onStop: () => void */\r\n  onStop({ clientX, clientY }: any) {\r\n    const position = positionFactory({\r\n      x: clientX, \r\n      y: clientY\r\n    });\r\n    this.props.dispatchStop(this.field, position);\r\n    this.props.dispatchEnd();\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(\r\n      this.props.dragging,\r\n      this.onStart,\r\n      this.onStop\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  dragging: state.ui.dragging\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatchStart: (field: Field) => dispatch(startDragging(field)),\r\n  dispatchStop: (field: Field, position: Position) => dispatch(stopDragging(field, position)),\r\n  dispatchEnd: () => dispatch(endDragging())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DraggingContainer);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport SideBarHeader from './components/SideBarHeader';\r\nimport Disclaymer from '../shared/components/Disclaymer';\r\nimport PersonaElement from './components/PersonaElement';\r\nimport MessageInfo from '../shared/components/MessageInfo';\r\nimport Draggable from 'react-draggable';\r\nimport DraggingContainer from '../shared/containers/DraggingContainer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    sideBar: {\r\n        width: 390,\r\n        bordeRadius: '2px 0 0 0',\r\n        backgroundColor: theme.colors.lightGray,\r\n        paddingBottom: 64\r\n    },\r\n    padded: {\r\n        padding: '22px 68px 0px 24px'\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 300,\r\n        color: '#3C4646'\r\n    },\r\n    disclaymer: {\r\n        marginTop: 22\r\n    },\r\n    elements: {\r\n      padding: '22px 14px 0px 24px',\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    },\r\n    messageInfo: {\r\n       padding: '0px 14px 0px 24px',\r\n       marginTop: 365\r\n    }\r\n});\r\n\r\nexport function SideBar(props: Props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.sideBar}>\r\n      <SideBarHeader />\r\n      <div className={classes.padded}>\r\n        <h2 className={classes.title}>Add Element to Persona</h2>\r\n      </div>\r\n      <div className={classes.disclaymer}>\r\n        <Disclaymer>\r\n            <p>\r\n                Click or drag & drop one of the element types below to add it to the persona.\r\n            </p>\r\n            <p style={{marginTop:5}}>\r\n                {'Click on the '}\r\n                &nbsp;\r\n                <FontAwesomeIcon icon=\"cog\" />\r\n                &nbsp;\r\n                {\"icon of each element to edit it's settings.\"}\r\n            </p>\r\n            <p>\r\n               You can reorder the elements by dragging then.\r\n            </p>\r\n        </Disclaymer>\r\n      </div>\r\n      <div className={classes.elements}>\r\n        <DraggingContainer>\r\n          { (draggingState, onStart, onStop) => {\r\n            return <Draggable \r\n                handle=\"#short-text\"\r\n                onStart={onStart}\r\n                position={{ x: 0, y: 0 }}\r\n                onStop={onStop}\r\n              >\r\n                <div id=\"short-text\">\r\n                  <PersonaElement kind=\"short-text\" />\r\n                </div>\r\n            </Draggable>\r\n          }}\r\n        </DraggingContainer>\r\n        <PersonaElement kind=\"long-text\" />\r\n      </div>\r\n      <div className={classes.elements}>\r\n          <PersonaElement kind=\"image\" />\r\n          <PersonaElement kind=\"image-gallery\" />\r\n      </div>\r\n      <div className={classes.elements}>\r\n          <PersonaElement kind=\"number\" />\r\n      </div>\r\n      <div className={classes.messageInfo}>\r\n        <MessageInfo title=\"Missing something ?\">\r\n          Contact us to let us know which element types you would like to use in your personas.\r\n        </MessageInfo>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(SideBar);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport Header from '../../Header/Header';\r\nimport SideBar from '../../SideBar/SideBar';\r\n\r\ntype Props = {\r\n  classes: any,\r\n  children: React.Node;\r\n};\r\n\r\nconst globalStyles = theme => ({\r\n  '@global': {\r\n    body: {\r\n      fontFamily: \"'Source Sans Pro', sans-serif\",\r\n      background: theme.colors.darkGray\r\n    },\r\n    '#header': {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 1000\r\n    }\r\n  },\r\n  viewport: {\r\n    padding: '0px 0px 117px 117px',\r\n    marginTop: theme.headerHeight + 44\r\n  },\r\n  sideBar: {\r\n    position: 'absolute',\r\n    top: theme.headerHeight + 16,\r\n    right: 0\r\n  }\r\n});\r\n\r\nfunction Viewport(props: Props) {\r\n  const {\r\n    classes,\r\n    children\r\n  } = props;\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <div className={classes.viewport}>\r\n        {children}\r\n      </div>\r\n      <div className={classes.sideBar}>\r\n        <SideBar />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default injectSheet(globalStyles)(Viewport);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    editionBar: {\r\n        '& > ul': {\r\n            color: theme.colors.midleGray,\r\n            display: 'flex',\r\n            fontSize: 14\r\n        },\r\n        '& > ul > li': {\r\n            padding: '0px 16px 0px 0px'\r\n        }\r\n    },\r\n    select: {\r\n        height: 20,\t\r\n        width: 45,\t\r\n        border: `1px solid ${theme.colors.lightGray}`,\t\r\n        borderRadius: 2,\r\n        fontSize: 11,\r\n    }\r\n});\r\n\r\nconst SelectField = ({ classes }) => (\r\n    <select className={classes.select} disabled>\r\n        <option>11pt</option>\r\n    </select>\r\n);\r\n\r\nexport function EditionBar({ classes }: Props) {\r\n  return (\r\n    <div className={classes.editionBar}>\r\n      <ul>\r\n        <li><FontAwesomeIcon icon=\"bold\" /></li>\r\n        <li><FontAwesomeIcon icon=\"italic\" /></li>\r\n        <li><FontAwesomeIcon icon=\"heading\" /></li>\r\n        <li><FontAwesomeIcon icon=\"list\" /></li>\r\n        <li><SelectField classes={classes} /></li>\r\n        <li><FontAwesomeIcon icon=\"paint-brush\" /></li>\r\n        <li><FontAwesomeIcon icon=\"link\" /></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(EditionBar);\r\n","// @flow\r\nimport * as React from 'react';\r\n\r\ntype Props = {\r\n initialValue: string;\r\n onBlur: (value: any) => void;\r\n children: any;\r\n};\r\n\r\ntype State = {\r\n  value: string;\r\n};\r\n\r\nexport class FieldContainer extends React.Component<Props, State>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.initialValue\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onFieldBlur = this.onFieldBlur.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props) {\r\n        if (prevProps.initialValue !==\r\n            this.props.initialValue) {\r\n            this.setState({\r\n                value: this.props.initialValue\r\n            });\r\n        }\r\n    }\r\n\r\n    /*:: onChange: () => void */\r\n    onChange(evt: any) {\r\n        this.setState({\r\n            value: evt.target.value\r\n        });\r\n    }\r\n\r\n    /*:: onFieldBlur: () => void */\r\n    onFieldBlur(evt: any) {\r\n        const fieldValue = {\r\n            [evt.target.name]: evt.target.value\r\n        };\r\n        this.props.onBlur(fieldValue);\r\n    }\r\n  \r\n    render() {\r\n        return this.props.children(\r\n            this.state.value,\r\n            this.onChange,\r\n            this.onFieldBlur\r\n        );\r\n    }\r\n};\r\n\r\nexport default FieldContainer;","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport EditionBar from '../../shared/components/EditionBar';\r\nimport FieldContainer from '../containers/FieldContainer';\r\n\r\ntype Props = {\r\n  classes: any;\r\n  label: string;\r\n  height: number;\r\n  initialValue: string;\r\n  kind: 'short-text' | 'long-text' | 'image' | 'image-gallery' | 'number';\r\n  src: ?string;\r\n  imageSources: string[];\r\n  formatedText: Array<string>;\r\n  editable: boolean;\r\n  name: string;\r\n  disabled: boolean;\r\n  hasErrors: boolean;\r\n  isNew: boolean;\r\n  id: number;\r\n  onBlur: (evt: any) => void;\r\n  onTrashIconClick: (evt: any) => void;\r\n};\r\n\r\nconst styles = theme => ({\r\n    field: {\r\n        background: theme.colors.white,\r\n        padding: '7px 6.96px 8px 12px'\r\n    },\r\n    fieldError: {\r\n        background: '#fee9ed',\r\n        padding: '7px 6.96px 8px 12px'\r\n    },\r\n    fieldHeader: {\r\n        fontSize: theme.fontSizes.small,\r\n\t    color: '#B1B6B6',\t\r\n        fontWeight: 'bold',\r\n    },\r\n    left: {\r\n        float: 'left'\r\n    },\r\n    right: {\r\n        float: 'right'\r\n    },\r\n    fieldContent: {\r\n        width: '100%',\r\n        marginTop: 8,\r\n        position: 'relative'\r\n    },\r\n    text: {\r\n        marginBlockEnd: '16px !important',\r\n        marginBlockStart: '16px !important',\r\n        fontSize: theme.fontSizes.medium\r\n    },\r\n    textField: {\r\n        position: 'absolute',\r\n        top: -6,\r\n        height: 23,\r\n        width: '90%',\r\n        left: 0,\r\n        border: '1px solid transparent',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        },\r\n        background: 'transparent'\r\n    },\r\n    formatedText: {\r\n        marginTop: 16,\r\n        paddingBottom: 12,\r\n        lineHeight: '22px',\r\n        '& p': {\r\n            marginTop: 16\r\n        }\r\n    },\r\n    editionBar: {\r\n        marginTop: 28,\r\n    },\r\n    imgGallery: {\r\n        marginTop: 22,\r\n        '& > ul > li': {\r\n            marginTop: 8\r\n        }\r\n    },\r\n    addImage: {\r\n        height: 56,\r\n        width: '100%',\t\r\n        border: `1px solid ${theme.colors.midleGray}`,\t\r\n        borderRadius: 2\t,\r\n        backgroundColor: theme.colors.lightGray,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: theme.colors.midleGray,\r\n        position: 'relative'\r\n    },\r\n    imageIcon: {\r\n        fontSize: 40,\r\n        zIndex: 0\r\n    },\r\n    plusIcon: {\r\n        fontSize: 14,\r\n        position: 'absolute',\r\n        top: 32,\r\n        left: 137,\r\n        zIndex: 1000,\r\n        color: theme.colors.darkGray\r\n    },\r\n    disabled: {\r\n        opacity: '0.4'\r\n    },\r\n    cursorPointer: {\r\n        cursor: 'pointer'\r\n    }\r\n});\r\n\r\nconst ImgField = ({ height, src }) => (\r\n    <img \r\n        style={{ width: '100%',  height: height - 15}} \r\n        src={src} \r\n        alt=\"imagem\"\r\n    />\r\n);\r\nconst ShortText = ({ classes, initialValue, editable, name, onBlur }) => editable ? \r\n    <FieldContainer onBlur={onBlur}  initialValue={initialValue}>\r\n        { (value, onChange, onFieldBlur) => {\r\n            return <input \r\n                    type=\"text\"\r\n                    className={`${classes.text} ${classes.textField}`}   \r\n                    value={value}\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    onBlur={onFieldBlur}\r\n                />\r\n        }}\r\n    </FieldContainer> : <p className={classes.text}>{initialValue}</p>;\r\n\r\nconst LongText = ({ classes, formatedText }) => (\r\n    <React.Fragment>\r\n        <div className={classes.editionBar}>\r\n            <EditionBar />\r\n        </div>\r\n        <div className={classes.formatedText}>\r\n            {formatedText.map((paragraph, index) => <p key={index}>{paragraph}</p>)}\r\n        </div>\r\n    </React.Fragment>\r\n)\r\n\r\nconst ImgGallery = ({ classes, imageSources }) => (\r\n    <div className={classes.imgGallery}>\r\n        <div className={classes.addImage}>\r\n            <div className={classes.imageIcon}>\r\n                <FontAwesomeIcon icon=\"image\" />\r\n            </div>\r\n            <div className={classes.plusIcon}>\r\n                <FontAwesomeIcon icon=\"plus-circle\" />\r\n            </div>\r\n        </div>\r\n        <ul>\r\n            { imageSources.map((src, index) => <li key={index}><ImgField height={176} src={src} /></li>) }\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nfunction PersonaField(props: Props) {\r\n    const { \r\n      classes, \r\n      label, \r\n      height, \r\n      kind, \r\n      src,\r\n      initialValue,\r\n      formatedText,\r\n      imageSources,\r\n      editable,\r\n      name,\r\n      onBlur,\r\n      disabled,\r\n      hasErrors,\r\n      isNew,\r\n      onTrashIconClick,\r\n      id\r\n    } = props;\r\n\r\n    const fieldContent = {\r\n        'short-text': <ShortText classes={classes} name={name} onBlur={onBlur} editable={editable} initialValue={initialValue} />,\r\n        'long-text': <LongText classes={classes} formatedText={formatedText} />,\r\n        'image': <ImgField height={height} src={src} />,\r\n        'image-gallery': <ImgGallery classes={classes} imageSources={imageSources} />,\r\n        'number': <ShortText classes={classes} name={name} onBlur={onBlur} editable={editable} initialValue={initialValue} />,\r\n    };\r\n    const fieldHeight = kind === 'long-text'  || kind === 'image-gallery' ? 'auto' : height;\r\n    const disabledStyles = disabled ? classes.disabled : '';\r\n    const fieldError = hasErrors ? classes.fieldError : '';\r\n\r\n  return (\r\n    <div style={{ height: fieldHeight }} className={`${fieldError || classes.field} ${disabledStyles}`}>\r\n        <div className={classes.fieldHeader}>\r\n            <div className={classes.left}>\r\n                {label}\r\n            </div>\r\n            {\r\n                isNew ? (\r\n                    <div onClick={() => onTrashIconClick(id)} \r\n                        className={`${classes.right} ${classes.cursorPointer}`}>\r\n                        <FontAwesomeIcon icon=\"trash\" />\r\n                    </div>\r\n                ) : (\r\n                    <div className={classes.right}>\r\n                        <FontAwesomeIcon icon=\"cog\" />\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n        <div className={classes.fieldContent}>\r\n            {fieldContent[kind]}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPersonaField.defaultProps = {\r\n    kind: 'short-text',\r\n    initialValue: '',\r\n    height: 41,\r\n    editable: false\r\n}\r\n\r\nexport default injectSheet(styles)(PersonaField);","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PersonaField from './PersonaField';\r\nimport type { PersonaState } from '../services/personaDucks';\r\n\r\ntype Props = {\r\n    classes: any;\r\n    onUpdatePersona: (persona: any) => void;\r\n    persona: PersonaState;\r\n};\r\n\r\nconst styles = theme => ({\r\n    personaHeader: {\r\n\t    height: 88,\t\t\t\r\n      backgroundColor: theme.colors.midleGray ,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      padding: '0px 16px 0px 16px'\r\n    },\r\n    avatar: {\r\n      height: 56,\t\r\n      width: 56,\r\n      borderRadius: 2,\t\r\n      backgroundColor: '#F05A50',\t\r\n      background: 'linear-gradient(180deg, rgba(255,255,255,0.2) 0%, rgba(240,240,240,0) 100%)',\r\n      fontSize: 29,\r\n      color: '#3C4646',\r\n      '& svg': {\r\n        margin: '10px 13px 10px 13px'\r\n      }\r\n    },\r\n    nameField: {\r\n      width: 416\r\n    },\r\n    shortNameField: {\r\n      width: 128\r\n    }\r\n});\r\n\r\nfunction PersonaHeader(props: Props) {\r\n  const { \r\n    classes, \r\n    persona: { name, initials, entityStatus, errors },\r\n    onUpdatePersona\r\n  } = props;\r\n  return (\r\n    <div className={classes.personaHeader}>\r\n      <div className={classes.avatar}>\r\n        <FontAwesomeIcon icon=\"user\" />\r\n      </div>\r\n      <div className={classes.nameField}>\r\n        <PersonaField \r\n          label=\"PERSONA NAME\"\r\n          initialValue={name}\r\n          onBlur={onUpdatePersona}\r\n          name=\"name\"\r\n          editable\r\n          hasErrors={!!errors['name']}\r\n          disabled={entityStatus === 'LOADING' || entityStatus === 'PERSISTING'}\r\n        />\r\n      </div>\r\n      <div className={classes.shortNameField}>\r\n        <PersonaField\r\n          label=\"SHORT NAME\"\r\n          name=\"initials\"\r\n          initialValue={initials}\r\n          onBlur={onUpdatePersona}\r\n          editable\r\n          hasErrors={errors['initials']}\r\n          disabled={entityStatus === 'LOADING' || entityStatus === 'PERSISTING'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(PersonaHeader);","// @flow\r\nimport React from 'react';\r\nimport injectSheet from 'react-jss';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        backgroundColor: theme.colors.lightGreen,\t\r\n        lineHeight: '18px',\r\n        color: theme.colors.darkGray,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 41,\r\n        padding: 8,\r\n        border: '3px dashed #646E6E',\r\n        justifyContent: 'center',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nexport function FieldPlaceHolder({ classes }: Props) {\r\n  return (\r\n    <div className={classes.root}>\r\n      <p>{'Drag your field here'}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(FieldPlaceHolder);","// @flow\r\nimport type { Field } from './fieldFactory';\r\nimport fieldFactory from './fieldFactory';\r\nimport { curry } from 'ramda';\r\nimport type { ColumnState } from './columnDucks';\r\n\r\nexport type Column = {\r\n    id: number;\r\n    width: 'thin' | 'wide',\r\n    fields: Array<Field>;\r\n};\r\n\r\nconst columnFactory = ({\r\n    id = 0,\r\n    width = 'thin',\r\n    fields = []\r\n}: Column = {}) => ({\r\n    id,\r\n    width,\r\n    fields\r\n});\r\n\r\nexport const createColumnsWithFields = (columns: Array<any> = [], fields: Array<any> = []): Array<Column> => {\r\n    const mappedFields = fields.map(fieldFactory);\r\n    const mapper =  (c: any) => Object.assign({}, c, { fields: mappedFields.filter(field => field.columnId === c.id) })\r\n    return columns.map(mapper)\r\n};\r\n\r\nexport const addFieldToColumn = curry((columnState: ColumnState, field: Field): ColumnState => {\r\n\r\n    const fields = columnState.items\r\n        .map(column => column.fields)\r\n        .reduce(\r\n            (acc, value) => acc.concat(value),\r\n            []\r\n        )\r\n        .map(field => field.id)\r\n        .sort((prev, next) => prev - next);\r\n\r\n    const column: Column = columnFactory(columnState.items.find(column => column.id === field.columnId));\r\n    const parsedField = Object.assign({}, field, { \r\n        id: fields[fields.length -1] + 1,\r\n        columnId: column.id,\r\n        prevId: column.fields[column.fields.length - 1].id,\r\n        nextId: null,\r\n        editable: true,\r\n        isNew: true\r\n    });\r\n\r\n    const columnWithField = Object.assign({}, column, {\r\n        fields: [parsedField, ...column.fields]\r\n    });\r\n\r\n    const nextColumns: Array<Column> = columnState.items\r\n        .filter((column: Column) => column.id !== field.columnId)\r\n        .concat([columnWithField])\r\n        .sort((prev, next) => prev.id - next.id);\r\n\r\n    return Object.assign({}, columnState, { items: nextColumns });\r\n});\r\n\r\nexport const removeFieldFromColumn = curry((columnState: ColumnState, field: Field): ColumnState => {\r\n    const column: Column = columnFactory(columnState.items.find(column => column.id === field.columnId));\r\n\r\n    const columnWithOutField = Object.assign({}, column, {\r\n        fields: column.fields\r\n            .filter(f => f.id !== field.id)\r\n    });\r\n\r\n    const nextColumns: Array<Column> = columnState.items\r\n        .filter((column: Column) => column.id !== field.columnId)\r\n        .concat([columnWithOutField])\r\n        .sort((prev, next) => prev.id - next.id);\r\n\r\n    return Object.assign({}, columnState, { entityStatus: 'STABLE', items: nextColumns });\r\n});\r\n\r\nexport default columnFactory;","export const setToLoadingState = state => Object.assign({}, state, { entityStatus: 'LOADING' });\r\n\r\nexport const setToErrorState = (state, errors) => Object.assign({}, state, { entityStatus: 'ERROR', errors });\r\n","// @flow\r\nimport type { EntityState } from '../../shared/state/entityStateFactory';\r\nimport type { Column } from './columnFactory';\r\nimport type { Field } from './fieldFactory';\r\nimport fieldFactory from './fieldFactory';\r\nimport columnFactory, { addFieldToColumn, removeFieldFromColumn } from './columnFactory';\r\nimport { withEntityState } from '../../shared/state/entityStateFactory';\r\nimport { compose, pipe } from 'ramda';\r\nimport { setToLoadingState, setToErrorState } from '../../shared/utils/stateHelper';\r\n\r\nexport type ColumnState = EntityState & {\r\n    items: Array<Column>\r\n};\r\n\r\nexport const GET_COLUMNS = 'GET_COLUMNS';\r\nexport const GET_COLUMNS_ERROR = 'GET_COLUMNS_ERROR';\r\nexport const GET_COLUMNS_COMPLETE = 'GET_COLUMNS_COMPLETE';\r\n\r\nexport const ADD_FIELD = 'ADD_FIELD';\r\nexport const ADD_FIELD_COMPLETE = 'ADD_FIELD_COMPLETE';\r\n\r\nexport const UPDATE_FIELD = 'UPDATE_FIELD';\r\nexport const UPDATE_FIELD_COMPLETE = 'UPDATE_FIELD_COMPLETE';\r\n\r\nexport const REMOVE_FIELD = 'REMOVE_FIELD';\r\nexport const REMOVE_FIELD_COMPLETE = 'REMOVE_FIELD_COMPLETE';\r\n\r\nexport const getColumns = (personaId: number) => ({\r\n    type: GET_COLUMNS,\r\n    payload: personaId\r\n});\r\n\r\nexport const getColumnsError = (errors: any) => ({\r\n    type: GET_COLUMNS_ERROR,\r\n    payload: errors\r\n});\r\n\r\nexport const getColumnsComplete = (columns: Array<Column>) => ({\r\n    type: GET_COLUMNS_COMPLETE,\r\n    payload: [...columns]\r\n});\r\n\r\nexport const addField = (field: Field) => ({\r\n    type: ADD_FIELD,\r\n    payload: field\r\n});\r\n\r\nexport const addFieldComplete = () => ({\r\n    type: ADD_FIELD_COMPLETE\r\n});\r\n\r\nexport const updateField = (field: Field) => ({\r\n    type: UPDATE_FIELD,\r\n    payload: field\r\n});\r\n\r\nexport const updateFieldComplete = (field: Field) => ({\r\n    type: UPDATE_FIELD_COMPLETE,\r\n    payload: field\r\n});\r\n\r\nexport const removeField = (field: Field) => ({\r\n    type: REMOVE_FIELD,\r\n    payload: field\r\n});\r\n\r\nexport const removeFieldComplete = (field: Field) => ({\r\n    type: REMOVE_FIELD_COMPLETE,\r\n    payload: field\r\n});\r\n\r\nconst withiItems = column => ({ ...column, items: [columnFactory()] });\r\n \r\nexport const initialState: ColumnState = compose(\r\n    withiItems,\r\n    withEntityState\r\n)({});\r\n\r\nexport default function columnsReducer(state: ColumnState = initialState, action: any) {\r\n    switch (action.type) {\r\n        case GET_COLUMNS:\r\n            return setToLoadingState(state);\r\n        case GET_COLUMNS_ERROR:\r\n            return setToErrorState(state, action.payload);\r\n        case GET_COLUMNS_COMPLETE:\r\n            return Object.assign({}, state, { entityStatus: 'STABLE', items: [...action.payload] });\r\n        case ADD_FIELD: {\r\n            return pipe(\r\n                fieldFactory,\r\n                addFieldToColumn(state)\r\n            )(action.payload);\r\n        }\r\n        case ADD_FIELD_COMPLETE:\r\n            return Object.assign({}, state, { entityStatus: 'STABLE' });\r\n        case UPDATE_FIELD:\r\n            return Object.assign({}, state, { entityStatus: 'PERSISTING' });\r\n        case UPDATE_FIELD_COMPLETE:\r\n            return Object.assign({}, state, { entityStatus: 'STABLE' });\r\n        case REMOVE_FIELD:\r\n            return Object.assign({}, state, { entityStatus: 'PERSISTING' });\r\n        case REMOVE_FIELD_COMPLETE:\r\n            return removeFieldFromColumn(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","// @flow\r\nimport React from 'react';\r\nimport type { ColumnState } from '../services/columnDucks';\r\nimport { connect } from 'react-redux';\r\nimport { getColumns, updateField, removeField, addField } from '../services/columnDucks';\r\nimport { DEFAULT_PERSONA_ID } from './PersonaContainer';\r\nimport fieldFactory from '../services/fieldFactory';\r\nimport type { Field } from '../services/fieldFactory';\r\nimport { offset } from '../../shared/utils/DOMHelper';\r\nimport type { DraggingState } from '../../shared/services/draggingDucks';\r\n\r\ntype Props = {\r\n  children: any;\r\n  columns: ColumnState;\r\n  dragging: DraggingState;\r\n  personaRef: any;\r\n  dispatchGet: (personaId: number) => void;\r\n  dispatchUpdate: (field: Field) => void;\r\n  dispatchRemoveField: (field: ?Field) => void;\r\n  dispatchAddField: (field: Field) => void;\r\n};\r\n\r\ntype State = {\r\n  \r\n};\r\n\r\nclass ColumnsContainer extends React.Component<Props, State>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onUpdateFeld = this.onUpdateFeld.bind(this);\r\n        this.onRemoveField = this.onRemoveField.bind(this);\r\n    }\r\n\r\n    containerPosition: number;\r\n\r\n    componentDidMount() {\r\n        this.props.dispatchGet(DEFAULT_PERSONA_ID);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props) {\r\n        if (prevProps.dragging.dragStatus !== this.props.dragging.dragStatus && \r\n            this.props.dragging.position) {\r\n            \r\n            const containerPosition = offset(this.props.personaRef.current).x + 664;\r\n            if (this.props.dragging.position.x < containerPosition)\r\n                this.props.dispatchAddField(this.props.dragging.field);\r\n        }\r\n    }\r\n\r\n    /*:: onUpdateFeld: () => void */\r\n    onUpdateFeld(field: any) {\r\n        const parsed = fieldFactory({\r\n            title: 'info',\r\n            data: field.info\r\n        });\r\n        this.props.dispatchUpdate(parsed);\r\n    }\r\n\r\n    /*:: onRemoveField: () => void */\r\n    onRemoveField(fieldId: number) {\r\n        const field = this.props.columns.items\r\n        .map(item => item.fields)\r\n        .reduce((acc, value) => acc.concat(value), [])\r\n        .find(f => f.id === fieldId);\r\n\r\n        this.props.dispatchRemoveField(field);\r\n    }\r\n\r\n    render() {\r\n        return this.props.children(\r\n            this.props.columns,\r\n            this.onUpdateFeld,\r\n            this.onRemoveField\r\n        )\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    columns: state.entities.columns,\r\n    dragging: state.ui.dragging\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGet: id => dispatch(getColumns(id)),\r\n    dispatchUpdate: field => dispatch(updateField(field)),\r\n    dispatchRemoveField: field => dispatch(removeField(field)),\r\n    dispatchAddField: (field: Field) => dispatch(addField(field))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnsContainer);","\r\nexport function offset(el) {\r\n    var rect = el.getBoundingClientRect(),\r\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    return { x: rect.top + scrollTop, y: rect.left + scrollLeft }\r\n}","// @flow\r\nimport * as React from 'react';\r\nimport injectSheet from \"react-jss\";\r\nimport PersonaHeader from './components/PersonaHeader';\r\nimport PersonaField from './components/PersonaField';\r\nimport FieldPlaceHolder from './components/FieldPlaceHolder';\r\nimport PersonaContainer from './containers/PersonaContainer';\r\nimport ColumnsContainer from './containers/ColumnsContainer';\r\nimport DraggingContainer from '../shared/containers/DraggingContainer';\r\n\r\ntype Props = {\r\n  classes: any;\r\n};\r\n\r\nconst styles = theme => ({\r\n    persona: {\r\n\t    //height: '100vh',\r\n        minHeight: 992,\r\n        width: 664,\t\r\n        borderRadius: '0 0 2px 2px',\t\r\n        backgroundColor: theme.colors.lightGray\r\n    },\r\n    personaContent: {\r\n        padding: 16,\r\n        display: 'flex'\r\n    },\r\n    firstColumn: {\r\n        flexBasis: 199,\r\n        flexGrow: 1,\r\n        '& > ul > li': {\r\n            marginTop: 16\r\n        },\r\n        '& > ul > li:nth-child(1)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    secondColumn: {\r\n        flexBasis: 199,\r\n        flexGrow: 2,\r\n        paddingLeft: 16,\r\n        '& > ul > li': {\r\n            marginTop: 16\r\n        },\r\n        '& > ul > li:nth-child(1)': {\r\n            marginTop: 0\r\n        }\r\n    }\r\n});\r\n\r\nconst ref = React.createRef();\r\n\r\nfunction Persona(props: Props) {\r\n  const { classes  } = props;\r\n  return (\r\n     <div ref={ref} className={classes.persona}>\r\n        <PersonaContainer>\r\n            { (persona, onUpdatePersona) => {\r\n                return <PersonaHeader \r\n                        persona={persona}  \r\n                        onUpdatePersona={onUpdatePersona}\r\n                    /> \r\n            }}\r\n        </PersonaContainer>\r\n        <div className={classes.personaContent}>\r\n            <ColumnsContainer personaRef={ref} >\r\n                { (columnsState, onUpdateFeld, onRemoveField) => {\r\n                    return columnsState.items.map((column, index) => {\r\n                        const colClass = index === 0 ? classes.firstColumn : classes.secondColumn;\r\n                        \r\n                        return <div key={column.id} className={colClass}>\r\n                            <ul>\r\n                                {\r\n                                    index === 1 && (\r\n                                        <DraggingContainer>\r\n                                            { (draggingState) => {\r\n                                                return draggingState.dragStatus === 'DRAGGING' ? (\r\n                                                    <FieldPlaceHolder />\r\n                                                ) : null\r\n                                            }}\r\n                                        </DraggingContainer>\r\n                                    )\r\n                                }\r\n                                \r\n                                { column.fields.map(field => {\r\n                                   return (\r\n                                    <li key={field.id}>\r\n                                        <PersonaField \r\n                                            height={field.fieldType === 'image' ? 176 : 41}\r\n                                            name={field.title} \r\n                                            kind={field.fieldType}\r\n                                            label={field.title.toUpperCase()}\r\n                                            src={field.src ? require(`../shared/assets/${field.src}`) : null}\r\n                                            imageSources={field.imageSources.map(src => require(`../shared/assets/${src}`))}\r\n                                            initialValue={field.data}\r\n                                            onBlur={onUpdateFeld}\r\n                                            formatedText={field.formatedText}\r\n                                            editable={field.editable}\r\n                                            disabled={columnsState.entityStatus === 'PERSISTING'}\r\n                                            isNew={field.isNew}\r\n                                            onTrashIconClick={onRemoveField}\r\n                                            id={field.id}\r\n                                        />\r\n                                    </li>\r\n                                   ) \r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    })\r\n                }}\r\n            </ColumnsContainer>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(Persona);","// @flow\r\nimport React from 'react';\r\nimport { ThemeProvider } from \"react-jss\";\r\nimport Viewport from '../shared/components/Viewport';\r\nimport Persona from '../Persona/Persona';\r\nimport '../shared/assets/reset.css';\r\n\r\nconst theme = {\r\n  colors: {\r\n    darkGray: '#646E6E',\r\n    lightGray: '#F0F0F0',\r\n    midleGray: '#DCDCDC',\r\n    white: '#fff',\r\n    lightGreen: '#F0F8FC',\r\n    lightGradient: 'linear-gradient(180deg, #FFFFFF 0%, #F0F0F0 100%)'\r\n  },\r\n  fontSizes: {\r\n    large: 20,\r\n    medium: 16,\r\n    small: 12\r\n  },\r\n  headerHeight: 64\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Viewport>\r\n        <Persona />\r\n      </Viewport>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\nfaSave, \r\nfaCog, \r\nfaTimes, \r\nfaImage, \r\nfaImages, \r\nfaInfoCircle, \r\nfaUser,\r\nfaEdit,\r\nfaPlusSquare,\r\nfaShare,\r\nfaCopy,\r\nfaArrowRight,\r\nfaQuestionCircle,\r\nfaEllipsisH,\r\nfaBold,\r\nfaItalic,\r\nfaHeading,\r\nfaList,\r\nfaPaintBrush,\r\nfaLink,\r\nfaPlusCircle,\r\nfaTrash\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst configureFontAwesome = () => {\r\n    library.add(faSave);\r\n    library.add(faCog);\r\n    library.add(faTimes);\r\n    library.add(faImage);\r\n    library.add(faImages);\r\n    library.add(faInfoCircle);\r\n    library.add(faUser);\r\n    library.add(faEdit);\r\n    library.add(faPlusSquare);\r\n    library.add(faShare);\r\n    library.add(faCopy);\r\n    library.add(faArrowRight);\r\n    library.add(faQuestionCircle);\r\n    library.add(faEllipsisH);\r\n    library.add(faBold);\r\n    library.add(faItalic);\r\n    library.add(faHeading);\r\n    library.add(faList);\r\n    library.add(faPaintBrush);\r\n    library.add(faLink);\r\n    library.add(faPlusCircle);\r\n    library.add(faTrash);\r\n};\r\n\r\nexport default configureFontAwesome;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport personaReducer from '../../Persona/services/personaDucks';\r\nimport columnsReducer from '../../Persona/services/columnDucks';\r\nimport draggingReducer from '../services/draggingDucks';\r\n\r\n// All Business Entities Goes Here\r\nconst entities = combineReducers({\r\n    persona: personaReducer,\r\n    columns: columnsReducer\r\n});\r\n\r\n//All ui stuff goes here\r\nconst ui = combineReducers({\r\n    dragging: draggingReducer\r\n});\r\n\r\nexport default combineReducers({\r\n    entities,\r\n    ui\r\n});","const server = () => {\r\n    const responses = {\r\n        '/personas/20': {\r\n            status: 200, \r\n            data: {\r\n                \"id\":20,\r\n                \"name\":\"Tess\",\r\n                \"initials\":\"TES\",\r\n                \"color\":\"#F46060\",\r\n                \"avatar\":\"tess\",\r\n            } \r\n        },\r\n\r\n        '/personas/20/columns': {\r\n            status: 200,\r\n            data: [\r\n                {\r\n                    \"id\": 1,\r\n                    \"width\": \"thin\"\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"width\": \"wide\"\r\n                }\r\n            ]\r\n        },\r\n\r\n        '/personas/20/columns/fields': {\r\n            status: 200,\r\n            data: [\r\n                {\r\n                    \"id\":1,\r\n                    \"title\":\"Image\",\r\n                    \"field_type\":\"image\",\r\n                    \"data\":\"tess.jpg\",\r\n                    \"column_id\":1,\r\n                    \"prev_id\":null,\r\n                    \"next_id\":2\r\n                },\r\n                {\r\n                    \"id\":2,\r\n                    \"title\":\"Age\",\r\n                    \"field_type\":\"number\",\r\n                    \"data\":27,\r\n                    \"column_id\":1,\r\n                    \"prev_id\":1,\r\n                    \"next_id\":3\r\n                },\r\n                {\r\n                    \"id\":3,\r\n                    \"title\":\"Gender\",\r\n                    \"field_type\":\"short_text\",\r\n                    \"data\":\"Not defined\",\r\n                    \"column_id\":1,\r\n                    \"prev_id\":2,\r\n                    \"next_id\":4\r\n                },\r\n                {\r\n                    \"id\":4,\r\n                    \"title\":\"Mood Images\",\r\n                    \"field_type\":\"image_gallery\",\r\n                    \"data\":[\r\n                        \"dog.jpg\",\r\n                        \"beach.jpeg\"\r\n                    ],\r\n                    \"column_id\":1,\r\n                    \"prev_id\":3,\r\n                    \"next_id\":null\r\n                },\r\n                {\r\n                    \"id\":5,\r\n                    \"title\":\"Occupation\",\r\n                    \"field_type\":\"short_text\",\r\n                    \"data\":\"Researcher\",\r\n                    \"column_id\":2,\r\n                    \"prev_id\":null,\r\n                    \"next_id\":6\r\n                },\r\n                {\r\n                    \"id\":6,\r\n                    \"title\":\"Nationality\",\r\n                    \"field_type\":\"short_text\",\r\n                    \"data\":\"French\",\r\n                    \"column_id\":2,\r\n                    \"prev_id\":5,\r\n                    \"next_id\":7\r\n                },\r\n                {\r\n                    \"id\":7,\r\n                    \"title\":\"Marital Status\",\r\n                    \"field_type\":\"short_text\",\r\n                    \"data\":\"Maried, 3 kids\",\r\n                    \"column_id\":2,\r\n                    \"prev_id\":6,\r\n                    \"next_id\":8\r\n                },\r\n                {\r\n                    \"id\":8,\r\n                    \"title\":\"Quote\",\r\n                    \"field_type\":\"long_text\",\r\n                    \"data\": [\r\n                        \"“Life may not be the party we hoped for, but while we're here, we should dance.”\"\r\n                    ],\r\n                    \"column_id\":2,\r\n                    \"prev_id\":7,\r\n                    \"next_id\":9\r\n                },\r\n                {\r\n                    \"id\":9,\r\n                    \"title\":\"Description\",\r\n                    \"field_type\":\"long_text\",\r\n                    \"data\": [\r\n                        'Tess is that friendly neighbor next door. She has a secure job at the national railway company. Together with her husband, she has a monthly household income of  5000 Euro net.',\r\n                        'Tess loves to spend free time with her three kids. Marcus, her husband, loves being outdoors, so whenever possible the couple takes long hiking tours with their children.', \r\n                        'Tess is not very interested in technology. She wants things that just work.'\r\n                    ],\r\n                    \"column_id\":2,\r\n                    \"prev_id\":8,\r\n                    \"next_id\":null\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return {\r\n        getResponse: url => responses[url] || { status: 404 },\r\n        getDynamicResponse: expectedResponse => ({ status: 200, data: {...expectedResponse} })\r\n    }\r\n};\r\n\r\nconst mockedHttpCall = (url = '', method = 'GET', body = {}) => {\r\n    const { getResponse, getDynamicResponse } = server();\r\n    const response = method === 'GET' ? getResponse(url) : getDynamicResponse(body);\r\n    \r\n    console.log(`Doing ${method} request to endpoint ${url} returned the response: ${JSON.stringify(response)}`);\r\n    \r\n    return new Promise(\r\n        resolve => setTimeout(() => resolve(response) , 1000)\r\n    );\r\n}\r\n\r\nconst apiFactory = () => ({\r\n    getPersona: id => mockedHttpCall(`/personas/${id}`),\r\n    updatePersona: persona => mockedHttpCall(`/personas/${persona.id}`, 'PUT', persona),\r\n    getColumns: personaId => mockedHttpCall(`/personas/${personaId}/columns`),\r\n    getFields: personaId => mockedHttpCall(`/personas/${personaId}/columns/fields`),\r\n    createField: (personaId, field) => mockedHttpCall(`/personas/${personaId}/fields`, 'POST', field),\r\n    updateField: (personaId, field) => mockedHttpCall(`/personas/${personaId}/fields/${field.id}`, 'PUT', field),\r\n    deleteField: (personaId, field) => mockedHttpCall(`/personas/${personaId}/fields/${field.id}`, 'DELETE', field)\r\n});\r\n\r\nexport default apiFactory;","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport apiFactory from './apiFactory';\r\nimport {\r\n    GET_PERSONA,\r\n    getPersonaComplete,\r\n    getPersonaError,\r\n    UPDATE_PERSONA,\r\n    updatePersonaComplete,\r\n    updatePersonaError\r\n} from './personaDucks';\r\n\r\nfunction* fetchPersona(action) {\r\n    try {\r\n        const response = yield call(\r\n            apiFactory().getPersona,\r\n            action.payload\r\n        );\r\n        yield put(getPersonaComplete(response.data));\r\n    } catch(e) {\r\n        yield put(getPersonaError(e));\r\n    }\r\n}\r\n\r\nfunction* updatePersona(action) {\r\n  try {\r\n      const response = yield call(\r\n        apiFactory().updatePersona,\r\n        action.payload\r\n      );\r\n      yield put(updatePersonaComplete(response.data))\r\n  } catch(e) {\r\n      yield put(updatePersonaError(e));\r\n  }\r\n} \r\n\r\nexport default [\r\n    takeLatest(GET_PERSONA, fetchPersona),\r\n    takeLatest(UPDATE_PERSONA,  updatePersona)\r\n];","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport apiFactory from './apiFactory';\r\nimport {\r\n    GET_COLUMNS,\r\n    getColumnsError,\r\n    getColumnsComplete,\r\n    ADD_FIELD,\r\n    addFieldComplete,\r\n    UPDATE_FIELD,\r\n    updateFieldComplete,\r\n    REMOVE_FIELD,\r\n    removeFieldComplete\r\n} from './columnDucks';\r\nimport { createColumnsWithFields } from './columnFactory';\r\n\r\nfunction* getColumns(action) {\r\n    try {\r\n        const columnsResponse = yield call(\r\n            apiFactory().getColumns,\r\n            action.payload\r\n        );\r\n\r\n        const fieldsResponse = yield call(\r\n            apiFactory().getFields,\r\n            action.payload\r\n        );\r\n\r\n        const columns = columnsResponse.data;\r\n        const fields = fieldsResponse.data;\r\n\r\n        const response = createColumnsWithFields(columns, fields);\r\n\r\n        yield put(getColumnsComplete(response));\r\n    } catch(e) {\r\n        yield put(getColumnsError(e));\r\n    }\r\n}\r\n\r\nfunction* addField(action) {\r\n    const response = yield call(\r\n        apiFactory().createField,\r\n        '20',\r\n        action.payload,\r\n    );\r\n\r\n    yield put(addFieldComplete(response));\r\n}\r\n\r\nfunction* updateField(action) {\r\n    const response = yield call(\r\n        apiFactory().updateField,\r\n        '20',\r\n        action.payload,\r\n    );\r\n\r\n    yield put(updateFieldComplete(response));\r\n}\r\n\r\nfunction* removeField(action) {\r\n    const response = yield call(\r\n        apiFactory().deleteField,\r\n        '20',\r\n        action.payload\r\n    );\r\n\r\n    yield put(removeFieldComplete(response.data));\r\n}\r\n\r\n\r\nexport default [\r\n    takeLatest(GET_COLUMNS, getColumns),\r\n    takeLatest(ADD_FIELD, addField),\r\n    takeLatest(UPDATE_FIELD, updateField),\r\n    takeLatest(REMOVE_FIELD, removeField)\r\n];","import { all } from 'redux-saga/effects';\r\nimport personaSagas from '../../Persona/services/personaSagas';\r\nimport columnSagas from '../../Persona/services/columnSagas';\r\n\r\nexport default function* root() {\r\n    yield all([\r\n        ...personaSagas,\r\n        ...columnSagas\r\n    ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport configureFontAwesome from './shared/config/fontAwesome';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from './shared/state/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\n// configure icons\r\nconfigureFontAwesome();\r\n\r\n// Configure store\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore,  applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducers from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport sagas from './sagas';\r\n\r\nexport default function configureStore() {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const middleWareEnhancer = applyMiddleware(\r\n        sagaMiddleware\r\n    );\r\n\r\n    const enhancers = composeWithDevTools(\r\n        middleWareEnhancer\r\n    );\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        enhancers\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    return store; \r\n};","var map = {\n\t\"./beach.jpeg\": 122,\n\t\"./capivara.jpg\": 123,\n\t\"./dog.jpg\": 124,\n\t\"./reset.css\": 59,\n\t\"./tess.jpg\": 125\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;"],"sourceRoot":""}